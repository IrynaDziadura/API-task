{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-08T11:04:20.389Z",
    "end": "2023-11-08T11:04:25.928Z",
    "duration": 5539,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "962fd59b-2dd7-45fa-907d-2274609fd5f0",
      "title": "",
      "fullFile": "C:\\Users\\Iryna_Dziadura\\Documents\\API task\\test.spec.js",
      "file": "\\test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
          "title": "API Test Suite",
          "fullFile": "C:\\Users\\Iryna_Dziadura\\Documents\\API task\\test.spec.js",
          "file": "\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "register user",
              "fullTitle": "API Test Suite register user",
              "timedOut": false,
              "duration": 798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post('https://petstore.swagger.io/v2/user', //{\n    {\n        \"id\": 0,\n        \"username\": \"NewUser\",\n        \"firstName\": \"Iryna\",\n        \"lastName\": \"Dziadura\",\n        \"email\": \"iryna18@test.com\",\n        \"password\": \"irynka1805\",\n        \"phone\": \"11111111111\",\n        \"userStatus\": 0\n    });\nconst validate = ajv.compile(postJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "7876ee07-d4ab-474d-9a44-e3948462af5d",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login as a User",
              "fullTitle": "API Test Suite login as a User",
              "timedOut": false,
              "duration": 737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://petstore.swagger.io/v2/user/login?username=NewUser&password=irynka1805',\n);\nconst validate = ajv.compile(getJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true)\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "8dcca40e-98bd-460c-97a6-f726477f14ff",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logs out current logged in user session",
              "fullTitle": "API Test Suite Logs out current logged in user session",
              "timedOut": false,
              "duration": 683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://petstore.swagger.io/v2/user/logout', \n);\nconst validate = ajv.compile(getlogoutJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true)\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "7169eded-e52d-40d1-9066-e41a58474884",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates list of users with given input array",
              "fullTitle": "API Test Suite creates list of users with given input array",
              "timedOut": false,
              "duration": 885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios({\n    method: \"post\",\n    url: \"https://petstore.swagger.io/v2/user/createWithList\",\n    headers: {\n        'api_key': \"special-key\",\n        'Content-Type': 'application/json'\n    },\n    data:\n        [\n            {\n                id: 0,\n                username: \"NewFirst\",\n                firstName: \"irynka\",\n                lastName: \"irynkairynkanew\",\n                email: \"iryna1888888@test.com\",\n                password: \"test123456\",\n                phone: \"894561223\",\n                userStatus: 0\n            },\n            {\n                id: 0,\n                username: \"NewOne\",\n                firstName: \"irynka\",\n                lastName: \"irynkanew\",\n                email: \"iryna1856@test.com\",\n                password: \"test12345689\",\n                phone: \"12345689\",\n                userStatus: 0\n            }\n        ]\n})\nconst validate = ajv.compile(postJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "92737010-e329-4372-b3b3-0093c961c85c",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allows adding a new Pet",
              "fullTitle": "API Test Suite should allows adding a new Pet",
              "timedOut": false,
              "duration": 617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post('https://petstore.swagger.io/v2/pet',\n    {\n        id: 35,\n        category: {\n            id: 8,\n            name: \"corgie\"\n        },\n        name: \"doggie\",\n        photoUrls: [\n            \"string\"\n        ],\n        tags: [\n            {\n                \"id\": 15,\n                \"name\": \"pretty\"\n            }\n        ],\n        status: \"available\"\n    });\n    const validate = ajv.compile(postaddPetJsonSchema);\n    const isValidate = validate(response.data)\n    console.log(response.data)\n    expect(isValidate).to.equal(true);\n    expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "d3795ca5-38e6-4f6f-b194-9517118e5af8",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allows updating Pet's image",
              "fullTitle": "API Test Suite should allows updating Pet's image",
              "timedOut": false,
              "duration": 653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://petstore.swagger.io/v2/pet',\n    {\n        id: 35,\n        category: {\n            \"id\": 8,\n            \"name\": \"corgie\"\n        },\n        name: \"doggie\",\n        photoUrls: [\n            \"https://cdn.britannica.com/16/234216-050-C66F8665/beagle-hound-dog.jpg\",\n            \"https://cdn.britannica.com/99/152499-050-29EFB7EE/Beagle.jpg\"\n        ],\n        tags: [\n            {\n                \"id\": 15,\n                \"name\": \"pretty\"\n            }\n        ],\n        status: \"available\"\n    })\nconst validate = ajv.compile(updatePetJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "5179d427-b978-4ec7-8018-643d270ec22b",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allows updating Pet's name and status",
              "fullTitle": "API Test Suite should allows updating Pet's name and status",
              "timedOut": false,
              "duration": 594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://petstore.swagger.io/v2/pet',\n    {\n        id: 35,\n        category: {\n            \"id\": 35,\n            \"name\": \"corgie\"\n        },\n        name: \"Husky\",\n        photoUrls: [\n            \"https://cdn.britannica.com/16/234216-050-C66F8665/beagle-hound-dog.jpg\",\n            \"https://cdn.britannica.com/99/152499-050-29EFB7EE/Beagle.jpg\"\n        ],\n        tags: [\n            {\n                \"id\": 15,\n                \"name\": \"pretty\"\n            }\n        ],\n        status: \"unavailable\"\n    })\nconst validate = ajv.compile(updatePetJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "9470548a-682c-4b24-a6ce-3dc5cab1fc03",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shoul allows deleting Pet",
              "fullTitle": "API Test Suite shoul allows deleting Pet",
              "timedOut": false,
              "duration": 556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios({\n    method: \"delete\",\n    url: 'https://petstore.swagger.io/v2/pet/35',\n    headers: {\n        api_key: 'special-key'\n    }\n})\nconst validate = ajv.compile(deletePetJsonSchema);\nconst isValidate = validate(response.data)\nconsole.log(response.data)\nexpect(isValidate).to.equal(true);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "6352a073-1c09-4aaa-88d0-7799631aa76b",
              "parentUUID": "2c26df27-7c15-4eb5-8a75-a84805fec02e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7876ee07-d4ab-474d-9a44-e3948462af5d",
            "8dcca40e-98bd-460c-97a6-f726477f14ff",
            "7169eded-e52d-40d1-9066-e41a58474884",
            "92737010-e329-4372-b3b3-0093c961c85c",
            "d3795ca5-38e6-4f6f-b194-9517118e5af8",
            "5179d427-b978-4ec7-8018-643d270ec22b",
            "9470548a-682c-4b24-a6ce-3dc5cab1fc03",
            "6352a073-1c09-4aaa-88d0-7799631aa76b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5523,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}